{"version":3,"file":"SceneManager.js","sourceRoot":"","sources":["../src/SceneManager.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;IAII,sBAAmB,IAAI;QACnB,YAAY,CAAC,SAAS,GAAG,IAAI,CAAC;QAC9B,IAAI,CAAC,YAAY,EAAE,CAAC;IACxB,CAAC;IAEM,8BAAO,GAAd;QAAA,iBAKC;QAJG,IAAI,CAAC,eAAe,EAAE,CAAC,IAAI,CAAC;YACxB,KAAI,CAAC,WAAW,EAAE,CAAC;YACnB,KAAI,CAAC,MAAM,EAAE,CAAC;QAClB,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,mCAAY,GAApB;QACI,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC,MAAM,CAAC;YAAC,YAAY,CAAC,MAAM,GAAG,IAAI,cAAc,EAAE,CAAC;IACzE,CAAC;IAEa,sCAAe,GAA7B;;;;4BACW,qBAAM,YAAY,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC,SAAS,CAAC,EAAE,2BAA2B,CAAC,EAAA;4BAA3F,sBAAO,SAAoF,EAAC;;;;KAC/F;IAEO,kCAAW,GAAnB;QACI,YAAY,CAAC,SAAS,CAAC,EAAE,GAAG,IAAI,UAAU,EAAE,CAAC;QAC7C,YAAY,CAAC,SAAS,CAAC,QAAQ,CAAC,YAAY,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;QAE3D,YAAY,CAAC,SAAS,CAAC,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC;QAC3C,YAAY,CAAC,SAAS,CAAC,QAAQ,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QAE9D,YAAY,CAAC,SAAS,CAAC,SAAS,GAAG,IAAI,MAAM,EAAE,CAAC;QAChD,YAAY,CAAC,SAAS,CAAC,QAAQ,CAAC,YAAY,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;QAElE,YAAY,CAAC,SAAS,CAAC,IAAI,GAAG,IAAI,KAAK,EAAO,CAAC;QAC/C,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC;QAC9C,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC;QAC9C,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,UAAC,GAAG;YACpC,OAAA,YAAY,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC;QAApC,CAAoC,CACvC,CAAC;IACN,CAAC;IAEM,6BAAM,GAAb;QACI,KAAK,CAAC,SAAS,CAAC;YACZ,YAAY,CAAC,SAAS,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC;YACnC,YAAY,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;YACtC,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,UAAC,GAAG;gBACpC,OAAA,GAAG,CAAC,MAAM,EAAE;YAAZ,CAAY,CACf,CAAC;YACF,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC,EAAE,IAAI,CAAC,CAAC;IACb,CAAC;IACL,mBAAC;AAAD,CAAC,AApDD,IAoDC;AApDK,UAAA,YAAY,2BAoDjB,CAAA","sourcesContent":["class SceneManager {\r\n    public static loader: ResourceLoader;\r\n    public static mainScene: Main;\r\n\r\n    public constructor(main) {\r\n        SceneManager.mainScene = main;\r\n        this.createLoader();\r\n    }\r\n\r\n    public onStart() {\r\n        this.createInitScene().then(() => {\r\n            this.createScene();\r\n            this.update();\r\n        });\r\n    }\r\n\r\n    private createLoader() {\r\n        if (!SceneManager.loader) SceneManager.loader = new ResourceLoader();\r\n    }\r\n\r\n    private async createInitScene() {\r\n        return await SceneManager.loader.loadMainResource([\"preload\"], \"resource/default.res.json\");\r\n    }\r\n\r\n    private createScene() {\r\n        SceneManager.mainScene.bg = new Background();\r\n        SceneManager.mainScene.addChild(SceneManager.mainScene.bg);\r\n\r\n        SceneManager.mainScene.floor = new Floor();\r\n        SceneManager.mainScene.addChild(SceneManager.mainScene.floor);\r\n\r\n        SceneManager.mainScene.character = new Runner();\r\n        SceneManager.mainScene.addChild(SceneManager.mainScene.character);\r\n\r\n        SceneManager.mainScene.awls = new Array<Awl>();\r\n        SceneManager.mainScene.awls[0] = new Awl(300);\r\n        SceneManager.mainScene.awls[1] = new Awl(900);\r\n        SceneManager.mainScene.awls.forEach((awl) =>\r\n            SceneManager.mainScene.addChild(awl)\r\n        );\r\n    }\r\n\r\n    public update() {\r\n        egret.startTick(() => {\r\n            SceneManager.mainScene.bg.update();\r\n            SceneManager.mainScene.floor.update();\r\n            SceneManager.mainScene.awls.forEach((awl) =>\r\n                awl.update()\r\n            );\r\n            return true;\r\n        }, this);\r\n    }\r\n}"]}