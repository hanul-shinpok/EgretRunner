{"version":3,"file":"ResourceLoader.js","sourceRoot":"","sources":["../src/ResourceLoader.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;IAEI;IACA,CAAC;IAEY,yCAAgB,GAA7B,UAA8B,QAAuB,EAAE,IAAY;;;;;;8BACvC,EAAR,qBAAQ;;;6BAAR,CAAA,sBAAQ,CAAA;wBAAf,GAAG;wBAAc,qBAAM,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,IAAI,CAAC,EAAA;;wBAAlC,SAAkC,CAAC;;;wBAA7C,IAAQ,CAAA;;;;;;KAC3B;IAEY,qCAAY,GAAzB,UAA0B,GAAW,EAAE,IAAY;;;;;;;wBAE3C,qBAAM,GAAG,CAAC,UAAU,CAAC,IAAI,EAAE,WAAW,CAAC,EAAA;;wBAAvC,SAAuC,CAAC;wBACxC,qBAAM,GAAG,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,CAAC,EAAA;;wBAA3B,SAA2B,CAAC;wBAC5B,OAAO,CAAC,GAAG,CAAC,mBAAmB,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;;;;wBAGpD,OAAO,CAAC,KAAK,CAAC,GAAC,CAAC,CAAC;;;;;;KAExB;IAED;kDAC8C;IACvC,wCAAe,GAAtB,UAAuB,WAAmB,EAAE,UAAkB,EAAE,QAAgB;QAC5E,IAAI,QAAQ,GAAG,IAAI,KAAK,CAAC,oBAAoB,CAAC,GAAG,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;QAC/F,IAAI,IAAI,GAAG,IAAI,KAAK,CAAC,SAAS,CAAC,QAAQ,CAAC,qBAAqB,CAAC,QAAQ,CAAC,CAAC,CAAC;QACzE,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IAGL,qBAAC;AAAD,CAAC,AA7BD,IA6BC;AA7BK,UAAA,cAAc,6BA6BnB,CAAA","sourcesContent":["class ResourceLoader {\r\n\r\n    public constructor() {\r\n    }\r\n\r\n    public async loadMainResource(grpNames: Array<string>, path: string) {\r\n        for (let grp of grpNames) await this.loadResource(grp, path);\r\n    }\r\n\r\n    public async loadResource(key: string, path: string) {\r\n        try {\r\n            await RES.loadConfig(path, \"resource/\");\r\n            await RES.loadGroup(key, 0);\r\n            console.log(\"Load Complete!! [\" + path + \"]\" + key);\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n\r\n    /** texture merger 사용하여 json, png 파일 추출\r\n     * default.res.json에 등록하여 loadConfig 후 불러오기 */\r\n    public createMovieClip(textureJson: string, texturePng: string, clipName: string): egret.MovieClip {\r\n        let factorty = new egret.MovieClipDataFactory(RES.getRes(textureJson), RES.getRes(texturePng));\r\n        let clip = new egret.MovieClip(factorty.generateMovieClipData(clipName));\r\n        return clip;\r\n    }\r\n\r\n\r\n}"]}